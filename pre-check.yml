---
- name: Pre-Checks for Jenkins Environment
  hosts: localhost
  gather_facts: no

  vars:
    jenkins_ip: "10.63.20.41"
    jenkins_port: 8080
    git_command: "git --version"
    maven_command: "mvn --version"
    kubectl_command: "kubectl version --client"
    sonar_url: "http://10.138.77.104:9000"
    docker_registry_url: "https://hub.docker.com/u/bhavanaguda"
    jenkins_user: "ramakanth"
    jenkins_token: "11224b5d9b915e9b6540e5fd11d87baf82"
    jenkins_url: "http://10.63.20.41:8080"

  tasks:
    - name: Check if Git is installed
      command: "{{ git_command }}"
      register: git_result
      ignore_errors: yes

    - name: git
      debug:
        msg: "Git is not installed."
      when: git_result is failed

    - name: Check Available Memory on Jenkins Server
      shell: free -m | awk 'NR==2{print $3}'   # Get used memory
      register: used_memory
      ignore_errors: yes

    - name: Check Total Memory on Jenkins Server
      shell: free -m | awk 'NR==2{print $2}'   # Get total memory
      register: total_memory
      ignore_errors: yes

    - name: Check Available Memory on Jenkins Server
      debug:
        msg: "Insufficient memory available on Jenkins server. Please allocate more memory."
      when: used_memory.stdout|int == total_memory.stdout|int
      ignore_errors: yes

    - name: Check Available Memory on Jenkins Server
      debug:
        msg: "memory available on Jenkins server. {{ total_memory.stdout|int - used_memory.stdout|int }} MB left."
      when: used_memory.stdout|int != total_memory.stdout|int

    - name: Check if Maven is installed
      command: "{{ maven_command }}"
      register: maven_result
      ignore_errors: yes

    - name: maven
      debug:
        msg: "Maven is not installed."
      when: maven_result is failed

    - name: Check if Kubernetes is installed
      command: "{{ kubectl_command }}"
      register: kubectl_result
      ignore_errors: yes

    - name: Kubernetes
      debug:
        msg: "Kubernetes is not installed."
      when: kubectl_result is failed

    - name: Check Jenkins Master-Slave connection
      uri:
        url: "http://{{ jenkins_ip }}:{{ jenkins_port }}/computer/api/json"
        method: GET
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_token }}"
        force_basic_auth: yes
        return_content: yes
        status_code: 200
      register: jenkins_connection
      ignore_errors: yes

    - name: Connection status
      debug:
        msg: "Connection to Jenkins master-slave endpoint succeeded."
      when: jenkins_connection.status == 200

    - name: Connection status
      debug:
        msg: "Connection to Jenkins master-slave endpoint failed."
      when: jenkins_connection.status != 200

    - name: Check if SonarQube is reachable
      uri:
        url: "{{ sonar_url }}"
        return_content: yes
        status_code: 200
      register: sonar_result

    - name: SonarQube
      debug:
        msg: "SonarQube is not reachable."
      when: sonar_result.status != 200

    - name: Check if Docker Registry is reachable
      uri:
        url: "{{ docker_registry_url }}"
        return_content: yes
        status_code: 200
      register: docker_result
      ignore_errors: yes

    - name: Docker
      debug:
        msg: "Docker Registry is not reachable."
      when: docker_result.status != 200

    - name: Get Jenkins nodes (build agents) status
      uri:
        url: "{{ jenkins_url }}/computer/api/json"
        method: GET
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_token }}"
        force_basic_auth: yes
        validate_certs: no
        return_content: yes
      register: jenkins_nodes_response
      ignore_errors: yes

    - name: Check if Jenkins nodes (build agents) are online
      set_fact:
        online_agents: "{{ jenkins_nodes_response.json.computer | selectattr('offline', 'equalto', False) | map(attribute='displayName') | list }}"
        offline_agents: "{{ jenkins_nodes_response.json.computer | selectattr('offline', 'equalto', True) | map(attribute='displayName') | list }}"

    - name: Print online build agents
      debug:
        msg: "Online build agents: {{ online_agents }}"

    - name: Print offline build agents
      debug:
        msg: "Offline build agents: {{ offline_agents }}"


  


    
