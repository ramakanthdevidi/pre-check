---
- name: Check Jenkins build agents and test environments
  hosts: localhost
  gather_facts: no
  vars:
    jenkins_user: "ramakanth"
    jenkins_token: "11224b5d9b915e9b6540e5fd11d87baf82"
    jenkins_url: "http://10.63.20.41:8080"

  tasks:
    - name: Get Jenkins nodes (build agents) status
      uri:
        url: "{{ jenkins_url }}/computer/api/json"
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_api_token }}"
        force_basic_auth: yes
        validate_certs: no
        return_content: yes
      register: jenkins_nodes_response

    - name: Print Jenkins nodes status
      debug:
        msg: "{{ jenkins_nodes_response.json }}"

    - name: Check if all build agents are online
      set_fact:
        all_agents_online: "{{ jenkins_nodes_response.json.computer | selectattr('offline', 'equalto', False) | list | length == jenkins_nodes_response.json.computer | length }}"

    - name: Ensure all build agents are online
      fail:
        msg: "Some build agents are offline"
      when: not all_agents_online

    - name: Get Jenkins jobs (test environments) status
      uri:
        url: "{{ jenkins_url }}/api/json"
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_api_token }}"
        force_basic_auth: yes
        validate_certs: no
        return_content: yes
      register: jenkins_jobs_response

    - name: Print Jenkins jobs status
      debug:
        msg: "{{ jenkins_jobs_response.json.jobs }}"

    - name: Check if any jobs failed
      set_fact:
        failed_jobs: "{{ jenkins_jobs_response.json.jobs | selectattr('color', 'search', '^red$') | list }}"

    - name: Ensure no jobs have failed
      fail:
        msg: "Some jobs have failed: {{ failed_jobs | map(attribute='name') | join(', ') }}"
      when: failed_jobs | length > 0
